(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{461:function(t,v,_){"use strict";_.r(v);var a=_(15),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),v("p",[t._v("plugchaind可执行程序是运行Plug Chain Hub节点的入口，包括验证人节点和其他全节点都需要通过安装"),v("code",[t._v("plugchaind")]),t._v("，并启动守护进程来加入到Plug Chain网络。你也可以使用"),v("code",[t._v("plugchaind")]),t._v("在本地启动自己的测试网络。")]),t._v(" "),v("h2",{attrs:{id:"硬件要求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬件要求"}},[t._v("#")]),t._v(" 硬件要求")]),t._v(" "),v("p",[t._v("建议在Linux服务器上运行Plug Chain Hub节点。")]),t._v(" "),v("h3",{attrs:{id:"最低硬件要求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最低硬件要求"}},[t._v("#")]),t._v(" 最低硬件要求")]),t._v(" "),v("ul",[v("li",[t._v("4 CPU")]),t._v(" "),v("li",[t._v("内存：8GB")]),t._v(" "),v("li",[t._v("磁盘：500GB SSD")]),t._v(" "),v("li",[t._v("系统：Ubuntu 16.04 LTS +")]),t._v(" "),v("li",[t._v("带宽：5Mbps")]),t._v(" "),v("li",[t._v("允许TCP端口26656和26657的所有传入连接")])]),t._v(" "),v("h2",{attrs:{id:"主目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主目录"}},[t._v("#")]),t._v(" 主目录")]),t._v(" "),v("p",[t._v("主目录是plug节点的工作目录。主目录包含所有配置信息和节点运行的所有数据。")]),t._v(" "),v("p",[t._v("在"),v("code",[t._v("plugchaind")]),t._v("命令中，可以使用标识"),v("code",[t._v("--home")]),t._v("来指定节点的主目录。如果在同一台计算机上运行多个节点，则需要为其指定不同的主目录。如果plug中未指定"),v("code",[t._v("--home")]),t._v("标识，则默认使用"),v("code",[t._v("$HOME/.plugchain")]),t._v("作为主目录。")]),t._v(" "),v("p",[v("code",[t._v("plugchaind init")]),t._v("命令负责初始化指定的"),v("code",[t._v("--home")]),t._v("目录并创建默认配置文件。除"),v("code",[t._v("plugchaind init")]),t._v("命令外，任何其他"),v("code",[t._v("plugchaind")]),t._v("子命令使用的主目录必须初始化，否则将报错。")]),t._v(" "),v("p",[t._v("Plug Chain Hub节点的数据存储在主目录的“data”目录中，包括区块链数据，应用程序层数据和索引数据。")]),t._v(" "),v("p",[t._v("所有配置文件都存储在"),v("code",[t._v("<home-dir>/config")]),t._v("目录中：")]),t._v(" "),v("h3",{attrs:{id:"genesis-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#genesis-json"}},[t._v("#")]),t._v(" genesis.json")]),t._v(" "),v("p",[t._v("genesis.json定义了创世块数据，该数据定义了系统参数，例如chain_id，共识参数，初始帐户通证分配，验证人的创建以及各模块的参数。详细信息参见"),v("RouterLink",{attrs:{to:"/zh/concepts/genesis-file.html"}},[t._v("genesis-file")]),t._v("。")],1),t._v(" "),v("h3",{attrs:{id:"node-key-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-key-json"}},[t._v("#")]),t._v(" node_key.json")]),t._v(" "),v("p",[t._v("node_key.json用于存储节点的密钥。"),v("code",[t._v("plugchaind tendermint show-node-id")]),t._v("查询的节点ID由该密钥派生，该ID是节点的唯一标识。它用于p2p连接。")]),t._v(" "),v("h3",{attrs:{id:"priv-validator-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#priv-validator-json"}},[t._v("#")]),t._v(" priv_validator.json")]),t._v(" "),v("p",[t._v("pri_validator.json是"),v("RouterLink",{attrs:{to:"/zh/concepts/validator-faq.html#tendermint-密钥"}},[t._v("Tendermint Key")]),t._v("文件，验证人节点将在每轮共识投票中使用该文件来签署Pre-vote/Pre-commit。随着共识的进行，tendermint共识引擎将不断更新"),v("code",[t._v("last_height")]),t._v(" /"),v("code",[t._v("last_round")]),t._v(" /"),v("code",[t._v("last_step")]),t._v("值。")],1),t._v(" "),v("h3",{attrs:{id:"config-toml"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#config-toml"}},[t._v("#")]),t._v(" config.toml")]),t._v(" "),v("p",[t._v("config.toml是节点的非共识配置。不同的节点可以根据自己的情况进行配置。常见的修改是"),v("code",[t._v("persistent_peers")]),t._v("、"),v("code",[t._v("moniker")]),t._v("、"),v("code",[t._v("laddr")])]),t._v(" "),v("h3",{attrs:{id:"app-toml"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#app-toml"}},[t._v("#")]),t._v(" app.toml")]),t._v(" "),v("p",[t._v("app.toml为Plug Chain Hub提供了基础配置、监控配置、API配置、同步状态配置和gRPC配置。")])])}),[],!1,null,null,null);v.default=e.exports}}]);