(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{371:function(t,e,a){"use strict";a.r(e);var n=a(15),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("plugchaind Daemon Commands allow you to init, start, reset a node, or generate a genesis file, etc.")]),t._v(" "),e("p",[t._v("You can get familiar with these commands by creating a "),e("RouterLink",{attrs:{to:"/daemon/local-testnet.html"}},[t._v("Local Testnet")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("command"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"available-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#available-commands"}},[t._v("#")]),t._v(" Available Commands")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-init"}},[t._v("init")])],1),t._v(" "),e("td",[t._v("Initialize private validator, p2p, genesis, and application configuration files")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-add-genesis-account"}},[t._v("add-genesis-account")])],1),t._v(" "),e("td",[t._v("Add genesis account to genesis.json")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-gentx"}},[t._v("gentx")])],1),t._v(" "),e("td",[t._v("Generate a genesis tx carrying a self delegation")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-collect-gentxs"}},[t._v("collect-gentxs")])],1),t._v(" "),e("td",[t._v("Collect genesis txs and output a genesis.json file")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-start"}},[t._v("start")])],1),t._v(" "),e("td",[t._v("Run the full node")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-unsafe-reset-all"}},[t._v("unsafe-reset-all")])],1),t._v(" "),e("td",[t._v("Resets the blockchain database, removes address book files, and resets priv_validator.json to the genesis state")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-tendermint"}},[t._v("tendermint")])],1),t._v(" "),e("td",[t._v("Tendermint subcommands")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#build-and-init"}},[t._v("testnet")])],1),t._v(" "),e("td",[t._v("Initialize files for a Plug Chain Hub testnet")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/local-testnet.html#plugchaind-reset"}},[t._v("reset")])],1),t._v(" "),e("td",[t._v("Reset app state to the specified height")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/export.html"}},[t._v("export")])],1),t._v(" "),e("td",[t._v("Export state to JSON")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/daemon/config.html"}},[t._v("config")])],1),t._v(" "),e("td",[t._v("Query and modify the client configuration of the specified data directory")])]),t._v(" "),e("tr",[e("td",[t._v("version")]),t._v(" "),e("td",[t._v("Show executable binary version")])])])]),t._v(" "),e("h2",{attrs:{id:"global-flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#global-flags"}},[t._v("#")]),t._v(" Global Flags")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name,shorthand")]),t._v(" "),e("th",[t._v("Default")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Required")]),t._v(" "),e("th",[t._v("Type")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-h, --help")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("Help for plugchaind")]),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("--home")]),t._v(" "),e("td",[t._v("/$HOME/.plugchain")]),t._v(" "),e("td",[t._v("Directory for config and data")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("String")])]),t._v(" "),e("tr",[e("td",[t._v("--log_level")]),t._v(" "),e("td",[t._v("*:info")]),t._v(" "),e("td",[t._v('Log level (default "main:info,state:info,*:error")')]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("String")])]),t._v(" "),e("tr",[e("td",[t._v("--trace")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("Print out full stack trace on errors")]),t._v(" "),e("td"),t._v(" "),e("td")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);