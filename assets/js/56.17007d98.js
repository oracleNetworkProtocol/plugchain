(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{377:function(t,e,a){"use strict";a.r(e);var s=a(15),o=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"restful-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restful-api"}},[t._v("#")]),t._v(" Restful API")]),t._v(" "),e("h2",{attrs:{id:"query-api-activation-method-and-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query-api-activation-method-and-configuration"}},[t._v("#")]),t._v(" Query API activation method and configuration")]),t._v(" "),e("p",[t._v("All routes are configured via "),e("code",[t._v("~/.plugchain/config/app.toml")]),t._v(" under the following fields:")]),t._v(" "),e("ul",[e("li",[t._v("The "),e("code",[t._v("api.enable = true|false")]),t._v(" field defines whether to enable the REST service, the default is "),e("code",[t._v("false")]),t._v(".")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("api.address = {string}")]),t._v(" field defines the address the server should bind to (actually the port, since the host should remain at "),e("code",[t._v("0.0.0.0")]),t._v("). Defaults to "),e("code",[t._v("tcp://0.0.0.0:1317")]),t._v(".")]),t._v(" "),e("li",[t._v("Some other API configuration options are defined and commented in "),e("code",[t._v("~/.plugchain/config/app.toml")]),t._v(", please refer to that file directly.")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('################################################## #############################\n### API Configuration ###\n################################################## #############################\n\n[api]\n\n# Enable defines if the API server should be enabled.\nenable = true\n\n# Swagger defines if swagger documentation should automatically be registered.\nswagger = true\n\n# Address defines the API server to listen on.\naddress = "tcp://0.0.0.0:1317"\n')])])]),e("h3",{attrs:{id:"grpc-gateway-rest-routing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grpc-gateway-rest-routing"}},[t._v("#")]),t._v(" gRPC-gateway REST routing")]),t._v(" "),e("p",[t._v("If gRPC cannot be used for various reasons (for example, you are building a web application and the browser does not support HTTP2, which gRPC depends on), Plug Chain Hub provides REST routing through gRPC-gateway.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://grpc-ecosystem.github.io/grpc-gateway/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC-gateway"),e("OutboundLink")],1),t._v(" is a tool to expose gRPC endpoints as REST endpoints. For every RPC endpoint defined in a Protobuf service, the SDK provides a REST equivalent.")]),t._v(" "),e("p",[t._v("For application developers, the gRPC-gateway REST route needs to be connected to the REST server by calling the "),e("code",[t._v("RegisterGRPCGatewayRoutes")]),t._v(" method on the ModuleManager.")]),t._v(" "),e("h3",{attrs:{id:"swagger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swagger"}},[t._v("#")]),t._v(" Swagger")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://swagger.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swagger"),e("OutboundLink")],1),t._v(" (or OpenAPIv2 ) specification file is under the "),e("code",[t._v("/swagger")]),t._v(" path on the API server. Swagger is an open specification that describes API endpoints for server services, including descriptions, input parameters, return types, and more information about each endpoint.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("/swagger")]),t._v(" endpoint can be configured via the "),e("code",[t._v("api.swagger")]),t._v(" field in "),e("code",[t._v("~/.plugchain/config/app.toml")]),t._v(", defaults to "),e("code",[t._v("false")]),t._v(".")]),t._v(" "),e("p",[t._v("For application developers, you may want to generate your own Swagger definitions based on custom modules. You can start from Plug Chain Hub's "),e("a",{attrs:{href:"https://github.com/oracleNetworkProtocol/plugchain/blob/main/scripts/protoc-swagger-gen.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swagger Generation Script"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"api-endpoints"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-endpoints"}},[t._v("#")]),t._v(" API endpoints")]),t._v(" "),e("p",[e("strong",[t._v("Part of Plug Chain Hub API endpoints")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("API Endpoints")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/auth/v1beta1/accounts/{address}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("return account information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/auth/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all parameters")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/balances/{address}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all tokens of an account")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/balances/{address}/{denom}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the balance of a single token of an account")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/denoms_metadata")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the metadata of all registered tokens of the client")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/denoms_metadata/{denom}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the metadata of a token on the client side")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the parameters of the bank module")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/supply")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total supply of all tokens")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/bank/v1beta1/supply/{denom}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total issuance of a token")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/community_pool")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the tokens in the community pool")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total rewards accumulated by delegators at each validator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the rewards accumulated by a delegator at a validator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all delegated validations of a delegator people")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query a delegator's withdrawal address")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query distribution module parameters")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/commission")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the accumulated commission of a validator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query a validator's reward")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/slashes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query a validator's punishment event")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/evidence/v1beta1/evidence")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all evidence")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/evidence/v1beta1/evidence/{evidence_hash}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query evidence by hash")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/params/{params_type}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query gov module parameters")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all proposals in the specified state")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query proposals by ID")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all mortgages for a proposal")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the mortgage information of a staker in a proposal")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/tally")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query voting statistics for a proposal")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/votes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all votes for a proposal")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the voting information of a voter in a proposal")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/params/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the specified parameters of a module by subspace and key")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/slashing/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query slashing module parameters")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/slashing/v1beta1/signing_infos")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the signature information of all validators")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/slashing/v1beta1/signing_infos/{cons_address}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the signature information of an address")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/delegations/{delegator_addr}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all delegation information of a delegator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the redelegation information of an address")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all unbonding information for a given delegator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all validator information of the specified delegator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the validator information of the specified validator and delegator pair")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/historical_info/{height}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the historical information of the specified height")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/params")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query staking module parameters")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/pool")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query pool information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query all validators matching the specified state")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query validator information by validator address")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query a validator's delegation information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the delegation information between the specified validator and the delegator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the unbonding information between the specified validator and the delegator")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query a validator's unbonding information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/upgrade/v1beta1/applied_plan/{name}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the applied upgrade plan by name")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/upgrade/v1beta1/current_plan")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the current upgrade plan")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the consensus state, which will be used as the trusted kernel for the next version of this chain")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/blocks/latest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Returns the latest block height")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/blocks/{height}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query blocks with specified height")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/node_info")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query current node information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/syncing")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query node synchronization information")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/validatorsets/latest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the current block validator set")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/base/tendermint/v1beta1/validatorsets/{height}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query the set of validators with a specified height")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("POST")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/simulate")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Simulate transaction execution to estimate gas consumption")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/txs")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Filter transactions by events")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("POST")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/txs")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Broadcast transaction")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("GET")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/txs/{hash}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Query transactions by hash")])])])]),t._v(" "),e("h2",{attrs:{id:"query-transaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query-transaction"}},[t._v("#")]),t._v(" query transaction")]),t._v(" "),e("p",[t._v("Querying a transaction using the gRPC-gateway REST endpoint can be done by sending a GET request, an example is shown below:")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("Query tx by hash:")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/txs/{hash}")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" GET "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accept: application/json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:1317/cosmos/tx/v1beta1/txs/{hash}"')]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Query tx by events:")]),t._v(" "),e("code",[t._v("/cosmos/tx/v1beta1/txs")]),t._v(" "),e("a",{attrs:{href:"#event"}},[t._v("event format {eventType}.{eventAttribute}={value}")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" GET "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accept: application/json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:1317/cosmos/tx/v1beta1/txs?events={eventType}.{eventAttribute}={value}&events={eventType}.{eventAttribute}={value}&pagination.limit=100&pagination.offset=0"')]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"event"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event"}},[t._v("#")]),t._v(" event")]),t._v(" "),e("p",[t._v("Events are implemented in the Cosmos SDK as aliases of the ABCI "),e("code",[t._v("Event")]),t._v(" type, and\nTakes the form: "),e("code",[t._v("{eventType}.{attributeKey}={attributeValue}")]),t._v(".")]),t._v(" "),e("p",[t._v("An event contains:")]),t._v(" "),e("ul",[e("li",[t._v('A "type" for advanced categorization of events; for example, the Cosmos SDK uses the '),e("code",[t._v('"message"')]),t._v(" type to filter events by "),e("code",[t._v("Msg")]),t._v(".")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("attributes")]),t._v(" list is a key-value pair that provides more information about classified events. For example, for the "),e("code",[t._v('"message"')]),t._v(" type, we can filter events using "),e("code",[t._v("message.action={some_action}")]),t._v(", "),e("code",[t._v("message.module={some_module}")]),t._v(", or "),e("code",[t._v("message.sender={some_sender} key-value pairs")]),t._v(".")]),t._v(" "),e("li",[t._v("Pagination query requires parameters "),e("code",[t._v("pagination.limit")]),t._v(" and "),e("code",[t._v("pagination.offset")]),t._v(" to be used together. egg: Query 100 records, starting from 0: "),e("code",[t._v("pagination.limit=100&pagination.offset=0")]),t._v(" Query the parameters of the second page "),e("code",[t._v("pagination.limit=100&pagination.offset=100")]),t._v(" The maximum value of the pagination.limit parameter is "),e("code",[t._v("100")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("To parse property values ​​as strings, be sure to add "),e("code",[t._v("'")]),t._v(" (single quotes) around each property value.")])]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" example")]),t._v(" "),e("p",[t._v("The following example shows how to query events using the Cosmos SDK.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("tx.height=23")]),t._v(" "),e("td",[t._v("Query all transactions with height 23")])]),t._v(" "),e("tr",[e("td",[t._v("tx.hash='DF9738772AAECE776187EFF106190FF169F00C725968A15D23FA1DC9B4A1B651'")]),t._v(" "),e("td",[t._v("Query the specified hash transaction")])]),t._v(" "),e("tr",[e("td",[t._v("message.action='/cosmos.bank.v1beta1.MsgSend'")]),t._v(" "),e("td",[t._v("Query all transactions containing x/bank "),e("code",[t._v("Send")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("message.module='bank'")]),t._v(" "),e("td",[t._v("Query all transactions that contain messages from the "),e("code",[t._v("x/bank")]),t._v(" module.")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("message.module")]),t._v(" "),e("th",[t._v("message.action")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("bank")]),t._v(" "),e("td",[t._v("/cosmos.bank.v1beta1.MsgSend")])]),t._v(" "),e("tr",[e("td",[t._v("bank")]),t._v(" "),e("td",[t._v("/cosmos.bank.v1beta1.MsgMultiSend")])]),t._v(" "),e("tr",[e("td",[t._v("distribution")]),t._v(" "),e("td",[t._v("/cosmos.distribution.v1beta1.MsgFundCommunityPool")])]),t._v(" "),e("tr",[e("td",[t._v("distribution")]),t._v(" "),e("td",[t._v("/cosmos.distribution.v1beta1.MsgSetWithdrawAddress")])]),t._v(" "),e("tr",[e("td",[t._v("distribution")]),t._v(" "),e("td",[t._v("/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward")])]),t._v(" "),e("tr",[e("td",[t._v("distribution")]),t._v(" "),e("td",[t._v("/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission")])]),t._v(" "),e("tr",[e("td",[t._v("governance")]),t._v(" "),e("td",[t._v("/cosmos.gov.v1beta1.MsgVote")])]),t._v(" "),e("tr",[e("td",[t._v("governance")]),t._v(" "),e("td",[t._v("/cosmos.gov.v1beta1.MsgVoteWeighted")])]),t._v(" "),e("tr",[e("td",[t._v("governance")]),t._v(" "),e("td",[t._v("/cosmos.gov.v1beta1.MsgSubmitProposal")])]),t._v(" "),e("tr",[e("td",[t._v("governance")]),t._v(" "),e("td",[t._v("/cosmos.gov.v1beta1.MsgDeposit")])]),t._v(" "),e("tr",[e("td",[t._v("staking")]),t._v(" "),e("td",[t._v("/cosmos.staking.v1beta1.MsgBeginRedelegate")])]),t._v(" "),e("tr",[e("td",[t._v("staking")]),t._v(" "),e("td",[t._v("/cosmos.staking.v1beta1.MsgCreateValidator")])]),t._v(" "),e("tr",[e("td",[t._v("staking")]),t._v(" "),e("td",[t._v("/cosmos.staking.v1beta1.MsgDelegate")])]),t._v(" "),e("tr",[e("td",[t._v("staking")]),t._v(" "),e("td",[t._v("/cosmos.staking.v1beta1.MsgEditValidator")])]),t._v(" "),e("tr",[e("td",[t._v("staking")]),t._v(" "),e("td",[t._v("/cosmos.staking.v1beta1.MsgUndelegate")])]),t._v(" "),e("tr",[e("td",[t._v("slashing")]),t._v(" "),e("td",[t._v("/cosmos.slashing.v1beta1.MsgUnjail")])]),t._v(" "),e("tr",[e("td",[t._v("token")]),t._v(" "),e("td",[t._v("/plugchain.prc10.MsgBurnToken")])]),t._v(" "),e("tr",[e("td",[t._v("token")]),t._v(" "),e("td",[t._v("/plugchain.prc10.MsgEditToken")])]),t._v(" "),e("tr",[e("td",[t._v("token")]),t._v(" "),e("td",[t._v("/plugchain.prc10.MsgIssueToken")])]),t._v(" "),e("tr",[e("td",[t._v("token")]),t._v(" "),e("td",[t._v("/plugchain.prc10.MsgMintToken")])]),t._v(" "),e("tr",[e("td",[t._v("evm")]),t._v(" "),e("td",[t._v("/ethermint.evm.v1.MsgEthereumTx")])]),t._v(" "),e("tr",[e("td",[t._v("liquidity")]),t._v(" "),e("td",[t._v("/tendermint.liquidity.v1beta1.MsgCreatePool")])]),t._v(" "),e("tr",[e("td",[t._v("liquidity")]),t._v(" "),e("td",[t._v("/tendermint.liquidity.v1beta1.MsgDepositWithinBatch")])]),t._v(" "),e("tr",[e("td",[t._v("liquidity")]),t._v(" "),e("td",[t._v("/tendermint.liquidity.v1beta1.MsgSwapWithinBatch")])]),t._v(" "),e("tr",[e("td",[t._v("liquidity")]),t._v(" "),e("td",[t._v("/tendermint.liquidity.v1beta1.MsgWithdrawWithinBatch")])])])]),t._v(" "),e("h2",{attrs:{id:"construct-and-sign-the-transaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#construct-and-sign-the-transaction"}},[t._v("#")]),t._v(" Construct and sign the transaction")]),t._v(" "),e("p",[t._v("Transactions cannot be constructed and signed using REST, only transactions can be broadcast. You can use "),e("RouterLink",{attrs:{to:"/endpoints/grpc-client.html"}},[t._v("gRPC client")]),t._v(" to construct and sign transactions.")],1),t._v(" "),e("h2",{attrs:{id:"broadcast-transaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#broadcast-transaction"}},[t._v("#")]),t._v(" Broadcast transaction")]),t._v(" "),e("p",[t._v("Broadcasting a transaction using the gRPC-gateway REST endpoint "),e("code",[t._v("cosmos/tx/v1beta1/txs")]),t._v(" can be done by sending a POST request as follows, where "),e("code",[t._v("NewTxBytes")]),t._v(" is a protobuf encoded byte array of the signed transaction:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encoding/base64"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendTx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--shear--")]),t._v("\n    \n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// base64 encode the encoded tx bytes")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// txBytes are obtained via `encCfg.TxConfig.TxEncoder()(txBuilder.GetTx())` or `encCfg.TxConfig.TxJSONEncoder()(txBuilder.GetTx())`")]),t._v("\n\n    NewTxBytes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StdEncoding"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("EncodeToString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txBytes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    fmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NewTxBytes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"tx_bytes":"{{NewTxBytes}}","mode":"BROADCAST_MODE_SYNC"}\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:1317/cosmos/tx/v1beta1/txs"')]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);