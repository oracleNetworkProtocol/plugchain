(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{363:function(t,e,s){"use strict";s.r(e);var a=s(15),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"account"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#account"}},[t._v("#")]),t._v(" account")]),t._v(" "),e("p",[t._v("This document describes Plug Chain's built-in account system.")]),t._v(" "),e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" prerequisites")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/accounts.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cosmos SDK Accounts"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://ethereum.org/en/whitepaper/#ethereum-accounts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ethereum Accounts"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"address-and-public-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#address-and-public-key"}},[t._v("#")]),t._v(" address and public key")]),t._v(" "),e("p",[t._v("There are 3 main addresses provided by default on Plug Chain:")]),t._v(" "),e("ul",[e("li",[t._v("The address and key of the account, which is used to identify the user (eg: "),e("code",[t._v("sender")]),t._v(" for the transaction). They are exported using the "),e("code",[t._v("secp256k1")]),t._v(" or "),e("code",[t._v("eth_secp256k1")]),t._v(" curves.")]),t._v(" "),e("li",[t._v("The address and key of the validator operator, used to identify the validator's operator, they are derived using the "),e("code",[t._v("secp256k1")]),t._v(" curve. "),e("a",{attrs:{href:"https://www.plugchain.network/v2/communityDetail?id=7",target:"_blank",rel:"noopener noreferrer"}},[t._v("v1.0 proposal"),e("OutboundLink")],1),t._v(" Support "),e("code",[t._v("eth_secp256k1")]),t._v(" after upgrade.")]),t._v(" "),e("li",[t._v("The address and key of the consensus node, used to identify the validator nodes participating in the consensus. They are exported using the "),e("code",[t._v("ed25519")]),t._v(" curve.")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("Address bech32 Prefix")]),t._v(" "),e("th",[t._v("Pubkey bech32 Prefix")]),t._v(" "),e("th",[t._v("Curve")]),t._v(" "),e("th",[t._v("Address byte length")]),t._v(" "),e("th",[t._v("Pubkey byte length")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Accounts")]),t._v(" "),e("td",[e("code",[t._v("gx")])]),t._v(" "),e("td",[e("code",[t._v("gxpub")])]),t._v(" "),e("td",[e("code",[t._v("secp256k1")]),t._v(","),e("code",[t._v("eth_secp256k1")])]),t._v(" "),e("td",[e("code",[t._v("20")])]),t._v(" "),e("td",[e("code",[t._v("33")]),t._v(" (compressed)")])]),t._v(" "),e("tr",[e("td",[t._v("Validator Operator")]),t._v(" "),e("td",[e("code",[t._v("gxvaloper")])]),t._v(" "),e("td",[e("code",[t._v("gxvaloperpub")])]),t._v(" "),e("td",[e("code",[t._v("secp256k1")]),t._v(","),e("code",[t._v("eth_secp256k1")])]),t._v(" "),e("td",[e("code",[t._v("20")])]),t._v(" "),e("td",[e("code",[t._v("33")]),t._v(" (compressed)")])]),t._v(" "),e("tr",[e("td",[t._v("Consensus Nodes")]),t._v(" "),e("td",[e("code",[t._v("gxvalcons")])]),t._v(" "),e("td",[e("code",[t._v("gxvalconspub")])]),t._v(" "),e("td",[e("code",[t._v("ed25519")])]),t._v(" "),e("td",[e("code",[t._v("20")])]),t._v(" "),e("td",[e("code",[t._v("32")])])])])]),t._v(" "),e("h2",{attrs:{id:"account-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#account-address"}},[t._v("#")]),t._v(" account address")]),t._v(" "),e("p",[t._v("Plug Chain uses "),e("code",[t._v("BaseAccount")]),t._v(", "),e("code",[t._v("EthAccount")]),t._v(" two account types.")]),t._v(" "),e("h3",{attrs:{id:"baseaccount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#baseaccount"}},[t._v("#")]),t._v(" BaseAccount")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BaseAccount defines a base account type. It contains all the necessary fields")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for basic account functionality. Any custom account type should extend this")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type for additional functionality (e.g. vesting).")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" BaseAccount "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nAddress "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`')]),t._v("\nPubKey "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Any "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"public_key,omitempty"`')]),t._v("\nAccountNumber "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"varint,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`')]),t._v("\nSequence "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# plugchaind q account gx1rpyxd0yqfkqcm8pmp0nejpeacd5t7usk26d2h2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http://8.210.180.240:1317/cosmos/auth/v1beta1/accounts/gx1rpyxd0yqfkqcm8pmp0nejpeacd5t7usk26d2h2")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /cosmos.auth.v1beta1.BaseAccount\naccount_number: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\naddress: gx1rpyxd0yqfkqcm8pmp0nejpeacd5t7usk26d2h2\npub_key:\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /cosmos.crypto.secp256k1.PubKey\n  key: AlcccAL+NKRmkvu1Hvmt5uSDzXQEMmOhu7YPy1RwnaXU\nsequence: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n")])])]),e("ul",[e("li",[t._v("Hierarchical deterministic wallet based on "),e("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP44"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[t._v("BIP44 defines a logical hierarchy of deterministic wallets based on the algorithm described in "),e("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP32"),e("OutboundLink")],1),t._v(", which allows the processing of multiple tokens , multiple accounts, external and internal chains per account, and millions of addresses per chain, such as Bitcoin and Ethereum.")]),t._v(" "),e("li",[t._v("pubkey type "),e("code",[t._v("secp256k1")]),t._v(" .")]),t._v(" "),e("li",[t._v("The root HD path of the account is "),e("code",[t._v("m/44'/118'/0'/0/0")]),t._v(" .")]),t._v(" "),e("li",[t._v("coin-type is 118 .")]),t._v(" "),e("li",[t._v("Those that support the "),e("RouterLink",{attrs:{to:"/concepts/token.html#prc-10"}},[t._v("PRC-10")]),t._v(" protocol do not support the "),e("RouterLink",{attrs:{to:"/concepts/token.html#prc-20"}},[t._v("PRC-20")]),t._v(" protocol")],1),t._v(" "),e("li",[t._v("bech32 identified as (gx...)")])]),t._v(" "),e("h3",{attrs:{id:"ethaccount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ethaccount"}},[t._v("#")]),t._v(" EthAccount")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EthAccount implements the authtypes. AccountI interface and embeds an")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// authtypes.BaseAccount type. It is compatible with the auth AccountKeeper.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EthAccount "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseAccount "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"bytes,1,opt,name=base_account,json=baseAccount,proto3,embedded=base_account" json:"base_account,omitempty" yaml:"base_account"`')]),t._v("\nCodeHash "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`protobuf:"bytes,2,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty" yaml:"code_hash"`')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# plugchaind q account gx1tr5gxpl3c78qp4xkkmhw5p9tmwruvte773ync5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http://8.210.180.240:1317/cosmos/auth/v1beta1/accounts/gx1tr5gxpl3c78qp4xkkmhw5p9tmwruvte773ync5")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /ethermint.types.v1.EthAccount\nbase_account:\n  account_number: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n  address: gx1tr5gxpl3c78qp4xkkmhw5p9tmwruvte773ync5\n  pub_key:\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /ethermint.crypto.v1.ethsecp256k1.PubKey\n    key: AmIFRfAboGW0P1GSG+8b9m8aMM1ikl4da4vEakglaLep\n  sequence: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\ncode_hash:0xc5d2440186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n")])])]),e("ul",[e("li",[t._v("Use ETH's ECDSA secp256k1 curve as the key, which fully satisfies "),e("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/84",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP84"),e("OutboundLink")],1),t._v(" [BIP44](https://github.com/bitcoin/bips/ blob/master/bip-0044.mediawiki) path.")]),t._v(" "),e("li",[t._v("pubkey type "),e("code",[t._v("eth_secp256k1")]),t._v(" .")]),t._v(" "),e("li",[t._v("The root HD path of the account is "),e("code",[t._v("m/44'/60'/0'/0")]),t._v(".")]),t._v(" "),e("li",[t._v("coin-type is 60 .")]),t._v(" "),e("li",[t._v("Support "),e("RouterLink",{attrs:{to:"/concepts/token.html#prc-10"}},[t._v("PRC-10")]),t._v(", "),e("RouterLink",{attrs:{to:"/concepts/token.html#prc-20"}},[t._v("PRC-20")]),t._v(" protocol")],1),t._v(" "),e("li",[t._v("bech32 is identified as (gx...)")]),t._v(" "),e("li",[t._v("Hex identifier (0x...) for compatibility with EVM's Web3 tools")])]),t._v(" "),e("h2",{attrs:{id:"account-address-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#account-address-format"}},[t._v("#")]),t._v(" Account address format")]),t._v(" "),e("p",[t._v("Bech32 format is the default format for Cosmos-SDK queries and transactions via CLI and REST\nclient. On the other hand, the hex format is Ethereum's "),e("code",[t._v("common.Address")]),t._v(",\n"),e("code",[t._v("sdk.AccAddress")]),t._v(" for Cosmos.")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Address (Bech32)")]),t._v(": "),e("code",[t._v("gx1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw")])]),t._v(" "),e("li",[e("strong",[t._v("Address ("),e("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-55",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP55"),e("OutboundLink")],1),t._v(" Hex)")]),t._v(": "),e("code",[t._v("0x91defC7fE5603DFA8CC9B655cF5772459BF10c6f")])]),t._v(" "),e("li",[e("strong",[t._v("Compressed Public Key")]),t._v(": "),e("code",[t._v('{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AsV5oddeB+hkByIJo/4lZiVUgXTzNfBPKC73cZ4K1YD2"}')]),t._v(" or "),e("code",[t._v('{"@type": "/cosmos.crypto.secp256k1.PubKey","key":"ApdvZ5Mwsb+sNbOFrZC4MOkvnpSe71Nci2kLaRiovZdv"}')])])]),t._v(" "),e("h2",{attrs:{id:"address-translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#address-translation"}},[t._v("#")]),t._v(" address translation")]),t._v(" "),e("p",[e("code",[t._v("plugchaind debug addr <address>")]),t._v(" can be used to convert addresses between hex and bech32 formats. E.g:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind debug addr gx1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Address: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("74")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("109")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("223")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("158")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("130")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("139")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("69")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("211")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("175")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  Address "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Bech32 Acc: gx1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Bech32 Val: gxvaloper1z3t55m0l9h0eupuz3dp5t5cypyv674jjn4d6nn\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind debug addr 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Address: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("74")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("109")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("223")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("158")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("130")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("139")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("69")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("211")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("175")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  Address "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Bech32 Acc: gx1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Bech32 Val: gxvaloper1z3t55m0l9h0eupuz3dp5t5cypyv674jjn4d6nn\n")])])]),e("h2",{attrs:{id:"cli-create-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-create-address"}},[t._v("#")]),t._v(" CLI create address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind keys "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" ethacc1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--algo")]),t._v(" eth_secp256k1 --coin-type "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--home")]),t._v(" node/node1\n- name: ethacc1\n  type: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("\n  address: gx1t97d7kc3wph4wymg3c64qg4ltxhv89kdkty3es\n  pubkey: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AxFvcgrK0vnSXUuNIDnT9FcGqczH6VQlMman1OY/wMw7"}\'')]),t._v("\n  mnemonic: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),e("h2",{attrs:{id:"import-ethaccount-type-account"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#import-ethaccount-type-account"}},[t._v("#")]),t._v(" Import EthAccount type account")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind keys "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" exportethacc1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--algo")]),t._v(" eth_secp256k1 --coin-type "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recover")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--home")]),t._v(" node/node1\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Enter your bip39 mnemonic\n\n- name: exportethacc1\n  type: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("\n  address: gx1t97d7kc3wph4wymg3c64qg4ltxhv89kdkty3es\n  pubkey: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AxFvcgrK0vnSXUuNIDnT9FcGqczH6VQlMman1OY/wMw7"}\'')]),t._v("\n  mnemonic: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),e("h2",{attrs:{id:"export-the-private-key-of-ethaccount-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-the-private-key-of-ethaccount-type"}},[t._v("#")]),t._v(" Export the private key of EthAccount type")]),t._v(" "),e("p",[t._v("Export needs to indicate "),e("code",[t._v("--keyring-backend")]),t._v(" account storage type")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("plugchaind keys unsafe-export-eth-key ethacc1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--home")]),t._v(" node/node1 --keyring-backend os\n2DBECA8D722F93C8DDD2CAAC9FA26121B88958569F1078BD12789AE61970811A\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);