syntax = "proto3";
package plugchain.prc10;

// this line is used by starport scaffolding # proto/tx/import
import "gogoproto/gogo.proto";

option go_package = "github.com/oracleNetworkProtocol/plugchain/x/prc10/types";
option (gogoproto.goproto_getters_all) = false;
// Msg defines the Msg service.
service Msg {
    rpc IssueToken(MsgIssueToken) returns (MsgIssueTokenResponse);
    rpc MintToken(MsgMintToken) returns (MsgMintTokenResponse);
    rpc EditToken(MsgEditToken) returns (MsgEditTokenResponse);
    rpc BurnToken(MsgBurnToken) returns (MsgBurnTokenResponse);
    rpc TransferOwnerToken (MsgTransferOwnerToken) returns (MsgTransferOwnerTokenResponse);
}
// MsgIssueToken defines an SDK message for issuing a new token
message MsgIssueToken{
    string symbol = 1;
    string name = 2;
    uint32 scale = 3;
    string min_unit = 4 ;
    uint64 initial_supply = 5 ;
    uint64 max_supply = 6 ;
    bool mintable = 7;
    string owner = 8;
}

message MsgIssueTokenResponse {}

// MsgMintTokenResponse defines the Msg/MintToken response type
message MsgMintToken{
    string symbol = 1 ;
    string to = 2 ;
    uint64 amount = 3;
    string owner = 4;
    
}

message MsgMintTokenResponse {}

// MsgEditToken defines an SDK message for editing a new token
message MsgEditToken{
    string symbol = 1;
    string name = 2;
    uint64 max_supply = 3;
    string owner = 4;
}
message MsgEditTokenResponse{}

// MsgBurnToken defines an SDK message for burning some tokens
message MsgBurnToken{
    string symbol = 1;
    uint64 amount = 2;
    string owner = 3;
}

message MsgBurnTokenResponse{}

//MsgTransferOwnerToken defines an SDK message for transferring the token owner
message MsgTransferOwnerToken{
    string symbol = 1;
    string owner = 2;
    string to = 3;
}

message MsgTransferOwnerTokenResponse{}